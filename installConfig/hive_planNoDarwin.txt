		provider "aws" {
		  alias = "hiveaws"
		  access_key = "@access_key"
		  secret_key = "@secret_key"
		  region     = "@region"
		}

		resource "aws_security_group" "hive_sec_group" {
		  provider = aws.hiveaws
		  name        = "hive_sec_group"

		  ingress {
		    from_port   = 0
		    to_port     = 65535
		    protocol    = "tcp"
		    cidr_blocks = ["0.0.0.0/0"]
		  }

		  egress {
		    from_port       = 0
		    to_port         = 65535
		    protocol        = "tcp"
		    cidr_blocks     = ["0.0.0.0/0"]
		  }
		}


		resource "aws_instance" "hiveinstance" {
		  provider = aws.hiveaws
		  depends_on = [aws_security_group.hive_sec_group]
		  ami           = "@ami"
		  instance_type = "@instancetype"
		  key_name = "@keyname"
		  security_groups = ["hive_sec_group"]

		  provisioner "remote-exec" {
		    inline = [
		    	"sudo apt-get update",
		    	"sudo apt-get update",
		    	"sudo apt-get update",
		    	"sudo apt-get update",
		    	"sudo apt-get install -y sqlite3",
		    	"sudo apt-get install -y gcc",
		    	"sudo apt-get install -y unzip",
		    	"sudo apt-get install -y zip",
		    	"sudo apt-get install -y cmake",
		    	"sudo apt-get install -y mingw-w64",
		    	"sudo apt-get install -y minngw-w64-common",
		    	"sudo apt-get install -y mingw-w64-i686-dev",
		    	"sudo apt-get install -y mingw-w64-x86-64-dev",
		    	"sudo mkdir /usr/local/STHive",
		    	"sudo mkdir /usr/local/STHive/implants",
		    	"sudo mkdir /usr/local/STHive/stagings",		      
		    	"sudo mkdir /usr/local/STHive/logs",
		    	"sudo mkdir /usr/local/STHive/certs",
		    	"sudo mkdir /usr/local/STHive/tools",
		    	"sudo mkdir /usr/local/STHive/sources",
		    	"sudo mkdir /usr/local/STHive/sources/src",
		    	"sudo mkdir /usr/local/STHive/sources/src/bichito",
		    	"sudo mkdir /usr/local/STHive/sources/src/redirector",
		    	"sudo mkdir /usr/local/STHive/sources/src/rebugo",
		    	"sudo mkdir /usr/local/STHive/sources/src/infra",
		    	"sudo mkdir /usr/local/STHive/sources/src/infra/.terraform",
		    	"sudo mkdir /usr/local/STHive/sources/src/infra/.terraform/plugins",
		    	"sudo wget https://golang.org/dl/go1.16.linux-amd64.tar.gz -P /usr/local/STHive",
		    	"sudo tar xvf /usr/local/STHive/go1.16.linux-amd64.tar.gz -C /usr/local/STHive/sources",
		    	"sudo chown -R ubuntu:ubuntu /usr/local/STHive/sources",
		    	"export GOPATH=/usr/local/STHive/sources/",
		    	"GO111MODULE=off /usr/local/STHive/sources/go/bin/go get \"github.com/mattn/go-sqlite3\"",
				"GO111MODULE=off /usr/local/STHive/sources/go/bin/go get \"github.com/gorilla/mux\"",
				"GO111MODULE=off /usr/local/STHive/sources/go/bin/go get \"golang.org/x/crypto/blowfish\"",
				"GO111MODULE=off /usr/local/STHive/sources/go/bin/go get \"golang.org/x/crypto/bcrypt\"",
				"GO111MODULE=off /usr/local/STHive/sources/go/bin/go get \"golang.org/x/net/context\"",
				"GO111MODULE=off /usr/local/STHive/sources/go/bin/go get \"golang.org/x/oauth2\"",
				"GO111MODULE=off /usr/local/STHive/sources/go/bin/go get \"golang.org/x/oauth2/google\"",
				"GO111MODULE=off /usr/local/STHive/sources/go/bin/go get \"google.golang.org/api/gmail/v1\"",
				"GO111MODULE=off /usr/local/STHive/sources/go/bin/go get \"github.com/hectane/go-acl/api\"",
				"GO111MODULE=off /usr/local/STHive/sources/go/bin/go get \"golang.org/x/crypto/ssh\"",
				"GO111MODULE=off /usr/local/STHive/sources/go/bin/go get \"golang.org/x/crypto/ssh/terminal\"",
				"GO111MODULE=off /usr/local/STHive/sources/go/bin/go get \"github.com/kr/pty\"",
				"GO111MODULE=off /usr/local/STHive/sources/go/bin/go get \"github.com/armon/go-socks5\"",
		    "sudo wget https://github.com/n3integration/terraform-provider-godaddy/releases/download/v1.8.7/terraform-provider-godaddy_1.8.7_linux_amd64.zip",
		    	"sudo mkdir -p /root/.terraform.d/plugins/registry.terraform.io/hashicorp/godaddy/1.8.7/linux_amd64/",
		   		"unzip terraform-provider-godaddy_1.8.7_linux_amd64.zip -d tmp",
				"sudo cp tmp/terraform-provider-godaddy_v1.8.7 /root/.terraform.d/plugins/registry.terraform.io/hashicorp/godaddy/1.8.7/linux_amd64/",
				"rm -rf tmp",
				"rm -rf terraform-provider-godaddy_1.8.7_linux_amd64.zip",
		    	"cd /usr/local/STHive/sources/src/infra/",
		    	"sudo wget https://releases.hashicorp.com/terraform/0.15.1/terraform_0.15.1_linux_amd64.zip",
		    	"sudo unzip terraform_0.15.1_linux_amd64.zip",
		    	"sudo rm terraform_0.15.1_linux_amd64.zip",
		    	"cd /usr/local/STHive/",
		    	"sudo git clone https://github.com/TheWover/donut",
		    	"cd /usr/local/STHive/donut",
		    	"sudo make",
		    	"sudo cp donut /usr/local/STHive/tools/donut",
		    	"sudo rm -rf /usr/local/STHive/donut",
		    	"sudo chown ubuntu:ubuntu -R /usr/local/STHive/",
		    ]
			
			on_failure = continue
		    
		    connection {
		      type     = "ssh"
		      user     = "ubuntu"
		      private_key = "${file("@keyname.pem")}"
		      host     = "${aws_instance.hiveinstance.public_ip}"
		    }
		  }

		  provisioner "file" {
		    source      = "ST.db"
		    destination = "/usr/local/STHive/ST.db"
		    connection {
		      type     = "ssh"
		      user     = "ubuntu"
		      private_key = "${file("@keyname.pem")}"
		      host     = "${aws_instance.hiveinstance.public_ip}"
		    }
		  }


		  provisioner "file" {
		    source      = "windependencies.zip"
		    destination = "/usr/local/STHive/windependencies.zip"
		    connection {
		      type     = "ssh"
		      user     = "ubuntu"
		      private_key = "${file("@keyname.pem")}"
		      host     = "${aws_instance.hiveinstance.public_ip}"
		    }
		  }

		  provisioner "file" {
		    source      = "../src/bichito/"
		    destination = "/usr/local/STHive/sources/src/bichito/"
		    connection {
		      type     = "ssh"
		      user     = "ubuntu"
		      private_key = "${file("@keyname.pem")}"
		      host     = "${aws_instance.hiveinstance.public_ip}"
		    }
		  }

		  provisioner "file" {
		    source      = "../src/redirector/"
		    destination = "/usr/local/STHive/sources/src/redirector/"
		    connection {
		      type     = "ssh"
		      user     = "ubuntu"
		      private_key = "${file("@keyname.pem")}"
		      host     = "${aws_instance.hiveinstance.public_ip}"
		    }
		  }

		  provisioner "file" {
		    source      = "../src/rebugo/"
		    destination = "/usr/local/STHive/sources/src/rebugo/"
		    connection {
		      type     = "ssh"
		      user     = "ubuntu"
		      private_key = "${file("@keyname.pem")}"
		      host     = "${aws_instance.hiveinstance.public_ip}"
		    }
		  }

		  provisioner "file" {
		    source      = "../src/infra/.terraformrc"
		    destination = "/usr/local/STHive/sources/src/infra/.terraformrc"
		    connection {
		      type     = "ssh"
		      user     = "ubuntu"
		      private_key = "${file("@keyname.pem")}"
		      host     = "${aws_instance.hiveinstance.public_ip}"
		    }
		  }

		  provisioner "file" {
		    source      = "tools"
		    destination = "/usr/local/STHive/tools/tools"
		    connection {
		      type     = "ssh"
		      user     = "ubuntu"
		      private_key = "${file("@keyname.pem")}"
		      host     = "${aws_instance.hiveinstance.public_ip}"
		    }
		  }

		  provisioner "file" {
		    source      = "hive"
		    destination = "/usr/local/STHive/hive"
		    connection {
		      type     = "ssh"
		      user     = "ubuntu"
		      private_key = "${file("@keyname.pem")}"
		      host     = "${aws_instance.hiveinstance.public_ip}"
		    }
		  }

		  provisioner "file" {
		    source      = "hive.service"
		    destination = "/usr/local/STHive/hive.service"
		    
		    connection {
		      type     = "ssh"
		      user     = "ubuntu"
		      private_key = "${file("@keyname.pem")}"
		      host     = "${aws_instance.hiveinstance.public_ip}"
		    }
		  }

		  provisioner "file" {
		    source      = "hive.key"
		    destination = "/usr/local/STHive/certs/hive.key"
		    
		    connection {
		      type     = "ssh"
		      user     = "ubuntu"
		      private_key = "${file("@keyname.pem")}"
		      host     = "${aws_instance.hiveinstance.public_ip}"
		    }
		  }

		  provisioner "file" {
		    source      = "hive.pem"
		    destination = "/usr/local/STHive/certs/hive.pem"
		    
		    connection {
		      type     = "ssh"
		      user     = "ubuntu"
		      private_key = "${file("@keyname.pem")}"
		      host     = "${aws_instance.hiveinstance.public_ip}"
		    }
		  }

		  provisioner "file" {
		    source      = "instScriptNoDarwin.sh"
		    destination = "/tmp/instScriptNoDarwin.sh"
		    
		    connection {
		      type     = "ssh"
		      user     = "ubuntu"
		      private_key = "${file("@keyname.pem")}"
		      host     = "${aws_instance.hiveinstance.public_ip}"
		    }
		  }		  

		  provisioner "remote-exec" {
		    inline = [
		      "sudo chmod +x /tmp/instScriptNoDarwin.sh",
		      "sudo bash /tmp/instScriptNoDarwin.sh",
		      "sudo rm /tmp/instScriptNoDarwin.sh",
		      "sudo reboot",
		    ]
		    on_failure = continue

		    connection {
		      type     = "ssh"
		      user     = "ubuntu"
		      private_key = "${file("@keyname.pem")}"
		      host     = "${aws_instance.hiveinstance.public_ip}"
		    }
		  }
		}
	output "ip" {
  		value = "${aws_instance.hiveinstance.public_ip}"
	}